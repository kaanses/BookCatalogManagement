// Helpers/ResultHandler.csusing Ardalis.Result;using Microsoft.AspNetCore.Mvc;using Mvc.BookManagement.Interfaces;namespace Mvc.BookManagement.Helpers{    public class ResultHandler : IResultHandler    {        private readonly Controller _controller;        public ResultHandler(Controller controller)        {            _controller = controller;        }        public IActionResult HandleResult<T>(Result<T> result, Func<T, IActionResult> onSuccess)        {            if (result.IsSuccess)            {                return onSuccess(result.Value);            }            switch (result.Status)            {                case ResultStatus.NotFound:                    Serilog.Log.Warning("Resource not found: {Message}",                        result.Errors?.FirstOrDefault() ?? "No specific error message");                    return _controller.NotFound();                case ResultStatus.Invalid:                    Serilog.Log.Warning("Validation failed: {ValidationErrors}",                        string.Join(", ", result.ValidationErrors.Select(e => $"{e.Identifier}: {e.ErrorMessage}")));                    var errorMessages = result.ValidationErrors.Select(e => $"Validation failed. Please check the error details  {e.Identifier} {e.ErrorMessage}").ToList();                    // Add a general error message                    _controller.TempData["ErrorMessage"] = errorMessages;                    return _controller.RedirectToAction("Index", "Home");                                case ResultStatus.Error:                default:                    Serilog.Log.Error("Error in operation: {Errors}",                        string.Join(", ", result.Errors ?? new List<string> { "Unknown error" }));                    _controller.TempData["ErrorMessage"] = "An error occurred. Please try again later.";                    return _controller.RedirectToAction("Index", "Home");            }        }    }}