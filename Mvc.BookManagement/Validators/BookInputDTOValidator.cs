using FluentValidation;using Microsoft.Extensions.Localization;using Mvc.BookManagement.Models.DTOs;using Mvc.BookManagement.Resources.SharedResources;namespace Mvc.BookManagement.Validators{    public class BookInputDTOValidator : AbstractValidator<BookInputDTO>    {        public BookInputDTOValidator(IStringLocalizer<SharedResource> localizer)        {            RuleFor(x => x.Title)                .NotEmpty().WithMessage(localizer["IsRequired"].Value)                .MaximumLength(100).WithMessage(localizer["TitleMaxLength"].Value);            RuleFor(x => x.Author)                .NotEmpty().WithMessage(localizer["IsRequired"].Value)                .MaximumLength(50).WithMessage(localizer["AuthorMaxLength"].Value);            RuleFor(x => x.Genre)                .NotEmpty().WithMessage(localizer["IsRequired"].Value)                .MaximumLength(30).WithMessage(localizer["GenreMaxLength"].Value);            RuleFor(x => x.PageCount)                .GreaterThanOrEqualTo(10).WithMessage(localizer["PageCountMin"].Value)                .LessThanOrEqualTo(10000).WithMessage(localizer["PageCountMax"].Value);        }    }}