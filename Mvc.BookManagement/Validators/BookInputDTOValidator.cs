using FluentValidation;using Mvc.BookManagement.Models.DTOs;namespace Mvc.BookManagement.Validators;public class BookInputDTOValidator : AbstractValidator<BookInputDTO>{    public BookInputDTOValidator()    {        RuleFor(x => x.Title)            .NotEmpty().WithMessage("Title is required")            .MaximumLength(100).WithMessage("Title cannot exceed 100 characters");        RuleFor(x => x.Author)            .NotEmpty().WithMessage("Author is required")            .MaximumLength(50).WithMessage("Author name cannot exceed 50 characters");        RuleFor(x => x.Genre)            .NotEmpty().WithMessage("Genre is required")            .MaximumLength(30).WithMessage("Genre cannot exceed 30 characters");        RuleFor(x => x.PageCount)            .GreaterThanOrEqualTo(10).WithMessage("Page count must be at least 10")            .LessThanOrEqualTo(10000).WithMessage("Page count cannot exceed 10000");    }}